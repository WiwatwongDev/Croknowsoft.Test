'use client'

import { useState } from 'react'
import QuestionLayout from './QuestionLayout'
import { 
  CalculatorIcon, 
  CodeBracketIcon, 
  EyeIcon, 
  PlusIcon,
  TrashIcon,
  DocumentArrowDownIcon,
  TableCellsIcon,
  LightBulbIcon
} from '@heroicons/react/24/outline'

interface Question5Props {
  onBack?: () => void
  onHome?: () => void
}

interface CalculatorItem {
  id: number
  amount: number
}

export default function Question5({ onBack, onHome }: Question5Props) {
  const [submissionType, setSubmissionType] = useState<'demo' | 'code' | 'github'>('demo')
  
  // Calculator State
  const [items, setItems] = useState<CalculatorItem[]>([
    { id: 1, amount: 1000.00 },
    { id: 2, amount: 500.00 },
    { id: 3, amount: 20.00 },
    { id: 4, amount: 30.02 }
  ])
  const [nextId, setNextId] = useState(5)
  const [newAmount, setNewAmount] = useState('')

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
  const total = items.reduce((sum, item) => sum + item.amount, 0)

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
  const addItem = () => {
    if (newAmount && !isNaN(Number(newAmount)) && parseFloat(newAmount) > 0) {
      setItems([...items, { 
        id: nextId, 
        amount: parseFloat(newAmount) 
      }])
      setNextId(nextId + 1)
      setNewAmount('')
    }
  }

  // ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
  const deleteItem = (id: number) => {
    setItems(items.filter(item => item.id !== id))
  }

  // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô PDF (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á)
  const exportToPdf = () => {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML content ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PDF
    const htmlContent = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="UTF-8">
        <title>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</title>
        <style>
          body { 
            font-family: 'Sarabun', Arial, sans-serif; 
            margin: 20px;
            color: #333;
          }
          .header { 
            text-align: center; 
            margin-bottom: 30px;
            border-bottom: 2px solid #4F46E5;
            padding-bottom: 15px;
          }
          .title { 
            font-size: 24px; 
            font-weight: bold;
            color: #4F46E5;
            margin-bottom: 5px;
          }
          .subtitle { 
            font-size: 14px; 
            color: #666;
            margin-bottom: 5px;
          }
          .date { 
            font-size: 12px; 
            color: #888;
          }
          table { 
            width: 100%; 
            border-collapse: collapse; 
            margin: 20px 0;
            box-shadow: 0 2px 8px rgba(0,0,0,0.1);
          }
          th { 
            background-color: #4F46E5; 
            color: white; 
            padding: 12px;
            text-align: left;
            font-weight: bold;
          }
          td { 
            padding: 10px 12px; 
            border-bottom: 1px solid #E5E7EB;
          }
          tr:nth-child(even) { 
            background-color: #F9FAFB; 
          }
          tr:hover { 
            background-color: #F3F4F6; 
          }
          .total-row { 
            background-color: #EEF2FF !important; 
            font-weight: bold;
            border-top: 2px solid #4F46E5;
          }
          .total-amount { 
            font-size: 18px; 
            color: #4F46E5;
          }
          .footer {
            margin-top: 40px;
            text-align: center;
            font-size: 12px;
            color: #666;
            border-top: 1px solid #E5E7EB;
            padding-top: 15px;
          }
          .summary {
            background-color: #F0F9FF;
            border: 1px solid #0EA5E9;
            border-radius: 8px;
            padding: 15px;
            margin: 20px 0;
          }
          .summary-title {
            font-weight: bold;
            color: #0369A1;
            margin-bottom: 10px;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="title">üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</div>
          <div class="subtitle">Simple Calculator Report</div>
          <div class="date">‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô: ${new Date().toLocaleDateString('th-TH', {
            year: 'numeric',
            month: 'long', 
            day: 'numeric',
            hour: '2-digit',
            minute: '2-digit'
          })}</div>
        </div>

        <div class="summary">
          <div class="summary-title">üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>
          <p><strong>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> ${items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
          <p><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î:</strong> ${total.toLocaleString('th-TH', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó</p>
          <p><strong>‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢:</strong> ${items.length > 0 ? (total / items.length).toLocaleString('th-TH', { minimumFractionDigits: 2 }) : '0.00'} ‡∏ö‡∏≤‡∏ó</p>
        </div>

        <table>
          <thead>
            <tr>
              <th style="width: 10%; text-align: center;">‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
              <th style="width: 30%;">‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
              <th style="width: 30%; text-align: right;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</th>
              <th style="width: 30%; text-align: right;">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠)</th>
            </tr>
          </thead>
          <tbody>
            ${items.map((item, index) => `
              <tr>
                <td style="text-align: center;">${index + 1}</td>
                <td>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà ${index + 1}</td>
                <td style="text-align: right; font-family: monospace;">${item.amount.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</td>
                <td style="text-align: right; font-size: 12px; color: #666;">${numberToThaiText(item.amount)}</td>
              </tr>
            `).join('')}
            <tr class="total-row">
              <td colspan="2" style="text-align: center; font-size: 16px;">üßÆ <strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</strong></td>
              <td style="text-align: right; font-family: monospace;" class="total-amount">${total.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</td>
              <td style="text-align: right; font-size: 12px; color: #4F46E5;"><strong>${numberToThaiText(total)}</strong></td>
            </tr>
          </tbody>
        </table>

        <div class="footer">
          <p>üñ•Ô∏è ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏î‡∏¢ Simple Calculator Application</p>
          <p>üìß ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠: calculator@example.com | üìû 02-123-4567</p>
          <p style="margin-top: 10px; font-size: 10px;">‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡∏∂‡πâ‡∏ô‡πÇ‡∏î‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô‡∏ô‡∏≥‡πÑ‡∏õ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
        </div>
      </body>
      </html>
    `

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' })
    const url = URL.createObjectURL(blob)
    const link = document.createElement('a')
    link.href = url
    link.download = `calculator-report-${new Date().getTime()}.html`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
    URL.revokeObjectURL(url)

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á
    alert('‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå HTML ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\nüìÑ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå HTML ‡πÉ‡∏ô browser ‡πÅ‡∏•‡πâ‡∏ß Print ‡πÄ‡∏õ‡πá‡∏ô PDF ‡πÑ‡∏î‡πâ\n\nüí° ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ online converter ‡πÅ‡∏õ‡∏•‡∏á HTML ‡πÄ‡∏õ‡πá‡∏ô PDF')
  }

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏ó‡∏¢ (‡πÅ‡∏ö‡∏ö‡∏á‡πà‡∏≤‡∏¢)
  const numberToThaiText = (num: number): string => {
    if (num === 0) return '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏≤‡∏ó‡∏ñ‡πâ‡∏ß‡∏ô'
    
    const thaiNumbers = ['', '‡∏´‡∏ô‡∏∂‡πà‡∏á', '‡∏™‡∏≠‡∏á', '‡∏™‡∏≤‡∏°', '‡∏™‡∏µ‡πà', '‡∏´‡πâ‡∏≤', '‡∏´‡∏Å', '‡πÄ‡∏à‡πá‡∏î', '‡πÅ‡∏õ‡∏î', '‡πÄ‡∏Å‡πâ‡∏≤']
    
    const baht = Math.floor(num)
    const satang = Math.round((num - baht) * 100)
    
    if (baht < 10) {
      let result = thaiNumbers[baht] + '‡∏ö‡∏≤‡∏ó'
      if (satang > 0) {
        result += satang < 10 ? thaiNumbers[satang] + '‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå' : 
                 satang < 20 ? '‡∏™‡∏¥‡∏ö' + (satang % 10 > 0 ? thaiNumbers[satang % 10] : '') + '‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå' :
                 thaiNumbers[Math.floor(satang / 10)] + '‡∏™‡∏¥‡∏ö' + (satang % 10 > 0 ? thaiNumbers[satang % 10] : '') + '‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå'
      } else {
        result += '‡∏ñ‡πâ‡∏ß‡∏ô'
      }
      return result
    }
    
    return baht.toLocaleString('th-TH') + '‡∏ö‡∏≤‡∏ó' + (satang > 0 ? satang + '‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå' : '‡∏ñ‡πâ‡∏ß‡∏ô')
  }

  // ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÄ‡∏õ‡πá‡∏ô Excel/CSV (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á)
  const exportToExcel = () => {
    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• CSV
    const csvData = [
      ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì - Simple Calculator'],
      ['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á', new Date().toLocaleDateString('th-TH')],
      ['‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á', new Date().toLocaleTimeString('th-TH')],
      [''], // ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á
      ['‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'],
      ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', items.length + ' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'],
      ['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', total.toFixed(2) + ' ‡∏ö‡∏≤‡∏ó'],
      ['‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢', items.length > 0 ? (total / items.length).toFixed(2) + ' ‡∏ö‡∏≤‡∏ó' : '0.00 ‡∏ö‡∏≤‡∏ó'],
      [''], // ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á
      ['‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î'],
      ['‡∏•‡∏≥‡∏î‡∏±‡∏ö', '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'],
      ...items.map((item, index) => [
        index + 1,
        `‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà ${index + 1}`,
        item.amount.toFixed(2),
        item.amount >= 1000 ? '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á' : '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥'
      ]),
      [''], // ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ß‡πà‡∏≤‡∏á
      ['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', '', total.toFixed(2), '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ' + items.length + ' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£']
    ]

    // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô CSV string
    const csvString = csvData.map(row => 
      row.map(cell => {
        // ‡∏´‡πà‡∏≠‡∏î‡πâ‡∏ß‡∏¢ quotes ‡∏´‡∏≤‡∏Å‡∏°‡∏µ comma ‡∏´‡∏£‡∏∑‡∏≠ newline
        const cellStr = String(cell || '')
        return cellStr.includes(',') || cellStr.includes('\n') || cellStr.includes('"') 
          ? `"${cellStr.replace(/"/g, '""')}"` 
          : cellStr
      }).join(',')
    ).join('\n')

    // ‡πÄ‡∏û‡∏¥‡πà‡∏° BOM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UTF-8 ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ Excel ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
    const BOM = '\uFEFF'
    const csvWithBOM = BOM + csvString

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
    const blob = new Blob([csvWithBOM], { type: 'text/csv;charset=utf-8' })
    const url = URL.createObjectURL(blob)
    const link = document.createElement('a')
    link.href = url
    link.download = `calculator-data-${new Date().getTime()}.csv`
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
    URL.revokeObjectURL(url)

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á
    alert('‚úÖ ‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å‡πÑ‡∏ü‡∏•‡πå CSV ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!\n\nüìä ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏õ‡∏¥‡∏î‡∏î‡πâ‡∏ß‡∏¢ Microsoft Excel, Google Sheets, ‡∏´‡∏£‡∏∑‡∏≠ LibreOffice Calc\n\nüí° ‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß')
  }

  // Handle Enter key
  const handleKeyPress = (e: React.KeyboardEvent) => {
    if (e.key === 'Enter') {
      addItem()
    }
  }

  const handleBack = () => {
    if (onBack) onBack()
    else console.log('Go back to previous page')
  }

  const handleHome = () => {
    if (onHome) onHome()
    else console.log('Go back to home page')
  }

  return (
    <QuestionLayout
      questionNumber={5}
      title="Calculator Application"
      onBack={handleBack}
      onHome={handleHome}
    >
      <div className="space-y-8">
        {/* Question Description */}
        <div className="bg-red-50 border border-red-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-red-900 mb-3">‡πÇ‡∏à‡∏ó‡∏¢‡πå</h3>
          <p className="text-red-800 leading-relaxed">
            ‡∏à‡∏á‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏á‡πà‡∏≤‡∏¢‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠‡∏ï‡πà‡∏≠‡πÑ‡∏õ‡∏ô‡∏µ‡πâ 
            (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡πà‡∏á‡πÄ‡∏õ‡πá‡∏ô source code ‡∏´‡∏£‡∏∑‡∏≠ GitHub ‡πÑ‡∏î‡πâ ‡πÑ‡∏°‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database)
          </p>
        </div>

        {/* Answer Summary */}
        <div className="bg-green-50 border border-green-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-green-900 mb-3">üéØ ‡∏Ñ‡∏≥‡∏ï‡∏≠‡∏ö</h3>
          <p className="text-green-800 leading-relaxed">
            ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏î‡πâ‡∏ß‡∏¢ Next.js ‡πÅ‡∏•‡∏∞ Tailwind CSS ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏£‡∏∞‡∏ö‡∏ö Export PDF/Excel ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á
          </p>
        </div>

        {/* Submission Type Selection */}
        <div className="flex flex-wrap justify-center gap-3 mb-8">
          <button
            type="button"
            onClick={() => setSubmissionType('demo')}
            className={`inline-flex items-center gap-2 px-5 py-2.5 rounded-xl border text-sm font-semibold transition
              focus:outline-none focus:ring-2 focus:ring-green-400 focus:ring-offset-2
              ${submissionType === 'demo'
          ? 'bg-green-100 border-green-500 text-green-700 shadow-md'
          : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-100 hover:border-green-400'
              }`}
            aria-pressed={submissionType === 'demo'}
          >
            <EyeIcon className="w-5 h-5" />
            <span>Live Demo</span>
          </button>
          <button
            type="button"
            onClick={() => setSubmissionType('code')}
            className={`inline-flex items-center gap-2 px-5 py-2.5 rounded-xl border text-sm font-semibold transition
              focus:outline-none focus:ring-2 focus:ring-blue-400 focus:ring-offset-2
              ${submissionType === 'code'
          ? 'bg-blue-100 border-blue-500 text-blue-700 shadow-md'
          : 'bg-white border-gray-300 text-gray-700 hover:bg-gray-100 hover:border-blue-400'
              }`}
            aria-pressed={submissionType === 'code'}
          >
            <CodeBracketIcon className="w-5 h-5" />
            <span>Source Code</span>
          </button>
        </div>

        {/* Live Demo */}
        {submissionType === 'demo' && (
          <div className="bg-white border border-gray-200 rounded-lg p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <CalculatorIcon className="w-5 h-5 mr-2" />
              ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏û‡∏£‡πâ‡∏≠‡∏° Export)
            </h3>
            
            {/* Calculator App */}
            <div className="max-w-md mx-auto bg-white rounded-lg shadow-xl overflow-hidden border-2 border-gray-300">
              
              {/* Header */}
              <div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4">
                <div className="flex items-center justify-between">
                  <h1 className="text-lg font-semibold">üìä ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</h1>
                  <div className="flex items-center space-x-2">
                    <span className="bg-blue-400 px-3 py-1 rounded text-sm font-medium">
                      {items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
                    </span>
                    <span className="bg-green-400 px-3 py-1 rounded text-sm font-medium">
                      ‚Çø {total.toFixed(2)}
                    </span>
                  </div>
                </div>
              </div>

              {/* Content */}
              <div className="p-4">
                {/* Table Header */}
                <div className="grid grid-cols-3 gap-4 mb-3 text-sm font-medium text-gray-600 border-b border-gray-200 pb-2">
                  <div>‡∏•‡∏≥‡∏î‡∏±‡∏ö</div>
                  <div>‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</div>
                  <div className="text-center">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</div>
                </div>

                {/* Items List */}
                <div className="space-y-2 mb-4 max-h-48 overflow-y-auto">
                  {items.map((item, index) => (
                    <div key={item.id} className="grid grid-cols-3 gap-4 items-center py-2 border-b border-gray-100 hover:bg-gray-50 transition-colors rounded">
                      <div className="text-sm font-medium text-gray-700">{index + 1}</div>
                      <div className="text-sm font-bold text-gray-900">{item.amount.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</div>
                      <div className="text-center">
                        <button
                          onClick={() => deleteItem(item.id)}
                          className="text-red-500 hover:text-red-700 hover:bg-red-50 p-2 rounded-full transition-colors"
                          title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                        >
                          <TrashIcon className="w-4 h-4" />
                        </button>
                      </div>
                    </div>
                  ))}
                  
                  {items.length === 0 && (
                    <div className="text-center py-8 text-gray-500">
                      <CalculatorIcon className="w-12 h-12 mx-auto mb-2 opacity-50" />
                      <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
                    </div>
                  )}
                </div>

                {/* Add New Item */}
                <div className="flex gap-2 mb-4">
                  <input
                  type="number"
                  step="0.01"
                  placeholder="‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç"
                  value={newAmount}
                  onChange={(e) => setNewAmount(e.target.value)}
                  onKeyDown={handleKeyPress}
                  className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent text-gray-900 bg-white"
                  />
                  <button
                  onClick={addItem}
                  disabled={!newAmount || isNaN(Number(newAmount)) || parseFloat(newAmount) <= 0}
                  className={`px-4 py-2 rounded-md font-medium transition-colors flex items-center space-x-1
                    ${!newAmount || isNaN(Number(newAmount)) || parseFloat(newAmount) <= 0
                    ? 'bg-gray-300 text-gray-500 cursor-not-allowed'
                    : 'bg-green-500 hover:bg-green-600 text-white'
                    }`}
                  >
                  <PlusIcon className="w-4 h-4" />
                  <span>‡πÄ‡∏û‡∏¥‡πà‡∏°</span>
                  </button>
                </div>

                {/* Statistics */}
                <div className="bg-gradient-to-r from-blue-50 to-blue-100 p-4 rounded-lg mb-4 border border-blue-200">
                  <div className="grid grid-cols-2 gap-4 text-sm">
                    <div>
                      <span className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</span>
                      <div className="font-bold text-blue-600">{items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
                    </div>
                    <div>
                      <span className="text-gray-600">‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢:</span>
                      <div className="font-bold text-blue-600">
                        {items.length > 0 ? (total / items.length).toLocaleString('th-TH', { minimumFractionDigits: 2 }) : '0.00'}
                      </div>
                    </div>
                  </div>
                  <div className="mt-3 pt-3 border-t border-blue-200">
                    <div className="flex justify-between items-center">
                      <span className="font-semibold text-gray-700">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                      <span className="text-2xl font-bold text-blue-600">
                        {total.toLocaleString('th-TH', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}
                      </span>
                    </div>
                  </div>
                </div>

                {/* Export Buttons */}
                <div className="grid grid-cols-2 gap-3">
                  <button
                    onClick={exportToPdf}
                    disabled={items.length === 0}
                    className="flex items-center justify-center space-x-2 bg-red-500 hover:bg-red-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white py-3 px-4 rounded-md font-medium transition-colors"
                    title={items.length === 0 ? "‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" : "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å HTML Report"}
                  >
                    <DocumentArrowDownIcon className="w-4 h-4" />
                    <span>Export PDF</span>
                  </button>
                  <button
                    onClick={exportToExcel}
                    disabled={items.length === 0}
                    className="flex items-center justify-center space-x-2 bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white py-3 px-4 rounded-md font-medium transition-colors"
                    title={items.length === 0 ? "‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 1 ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£" : "‡∏™‡πà‡∏á‡∏≠‡∏≠‡∏Å CSV ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Excel"}
                  >
                    <TableCellsIcon className="w-4 h-4" />
                    <span>Export Excel</span>
                  </button>
                </div>
              </div>
            </div>

            {/* Export Features Explanation */}
            <div className="mt-6 bg-green-50 border border-green-200 rounded-lg p-4">
              <h4 className="font-semibold text-green-900 mb-3">‚ú® ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå Export ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-green-800">
                <div className="space-y-2">
                  <div className="flex items-start space-x-2">
                    <span className="text-red-600 font-bold">üìÑ</span>
                    <div>
                      <div className="font-medium">Export PDF (HTML)</div>
                      <div className="text-xs text-green-600">‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô HTML ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏° ‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô PDF ‡πÑ‡∏î‡πâ</div>
                    </div>
                  </div>
                  <div className="flex items-start space-x-2">
                    <span className="text-green-600 font-bold">üìä</span>
                    <div>
                      <div className="font-medium">Export Excel (CSV)</div>
                      <div className="text-xs text-green-600">‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå CSV ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå CSV ‡πÑ‡∏î‡πâ</div>
                    </div>
                  </div>
                </div>
                <div className="space-y-1 text-xs">
                  <div>‚úì ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°</div>
                  <div>‚úì ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</div>
                  <div>‚úì ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö</div>
                  <div>‚úì ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏ó‡∏¢</div>
                  <div>‚úì ‡∏°‡∏µ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡πÉ‡∏ô‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô</div>
                  <div>‚úì ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</div>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* Source Code */}
        {submissionType === 'code' && (
          <div className="bg-white border border-gray-200 rounded-lg p-6">
            <h3 className="text-lg font-semibold text-gray-900 mb-4 flex items-center">
              <CodeBracketIcon className="w-5 h-5 mr-2" />
              Enhanced Source Code ‡∏û‡∏£‡πâ‡∏≠‡∏° Export Functions
            </h3>
            
            <div className="space-y-6">
              {/* Export Functions */}
              <div>
                <h4 className="font-medium text-gray-800 mb-2">üîß Export Functions (‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á)</h4>
                <div className="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto">
                  <pre className="text-sm"><code>{`// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Export PDF (HTML Report)
const exportToPdf = () => {
  const htmlContent = \`
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="UTF-8">
      <title>‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</title>
      <style>
        body { 
          font-family: 'Sarabun', Arial, sans-serif; 
          margin: 20px;
          color: #333;
        }
        .header { 
          text-align: center; 
          margin-bottom: 30px;
          border-bottom: 2px solid #4F46E5;
          padding-bottom: 15px;
        }
        .title { 
          font-size: 24px; 
          font-weight: bold;
          color: #4F46E5;
        }
        table { 
          width: 100%; 
          border-collapse: collapse; 
          margin: 20px 0;
          box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        }
        th { 
          background-color: #4F46E5; 
          color: white; 
          padding: 12px;
        }
        td { 
          padding: 10px 12px; 
          border-bottom: 1px solid #E5E7EB;
        }
        tr:nth-child(even) { 
          background-color: #F9FAFB; 
        }
        .total-row { 
          background-color: #EEF2FF !important; 
          font-weight: bold;
          border-top: 2px solid #4F46E5;
        }
      </style>
    </head>
    <body>
      <div class="header">
        <div class="title">üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</div>
        <div>‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà: \${new Date().toLocaleDateString('th-TH')}</div>
      </div>

      <div class="summary">
        <h3>üìã ‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</h3>
        <p>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£: \${items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
        <p>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: \${total.toLocaleString('th-TH', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó</p>
        <p>‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢: \${(total / items.length).toLocaleString('th-TH', { minimumFractionDigits: 2 })} ‡∏ö‡∏≤‡∏ó</p>
      </div>

      <table>
        <thead>
          <tr>
            <th>‡∏•‡∏≥‡∏î‡∏±‡∏ö</th>
            <th>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</th>
            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)</th>
            <th>‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠)</th>
          </tr>
        </thead>
        <tbody>
          \${items.map((item, index) => \`
            <tr>
              <td>\${index + 1}</td>
              <td>‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà \${index + 1}</td>
              <td style="text-align: right;">\${item.amount.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</td>
              <td>\${numberToThaiText(item.amount)}</td>
            </tr>
          \`).join('')}
          <tr class="total-row">
            <td colspan="2"><strong>‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</strong></td>
            <td style="text-align: right;"><strong>\${total.toLocaleString('th-TH', { minimumFractionDigits: 2 })}</strong></td>
            <td><strong>\${numberToThaiText(total)}</strong></td>
          </tr>
        </tbody>
      </table>
    </body>
    </html>
  \`

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
  const blob = new Blob([htmlContent], { type: 'text/html;charset=utf-8' })
  const url = URL.createObjectURL(blob)
  const link = document.createElement('a')
  link.href = url
  link.download = \`calculator-report-\${new Date().getTime()}.html\`
  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
  URL.revokeObjectURL(url)
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Export Excel (CSV)
const exportToExcel = () => {
  const csvData = [
    ['‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì - Simple Calculator'],
    ['‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á', new Date().toLocaleDateString('th-TH')],
    ['‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á', new Date().toLocaleTimeString('th-TH')],
    [''],
    ['‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'],
    ['‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', items.length + ' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£'],
    ['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î', total.toFixed(2) + ' ‡∏ö‡∏≤‡∏ó'],
    ['‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢', (total / items.length).toFixed(2) + ' ‡∏ö‡∏≤‡∏ó'],
    [''],
    ['‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î'],
    ['‡∏•‡∏≥‡∏î‡∏±‡∏ö', '‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£', '‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏á‡∏¥‡∏ô (‡∏ö‡∏≤‡∏ó)', '‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏'],
    ...items.map((item, index) => [
      index + 1,
      \`‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà \${index + 1}\`,
      item.amount.toFixed(2),
      item.amount >= 1000 ? '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏™‡∏π‡∏á' : '‡∏°‡∏π‡∏•‡∏Ñ‡πà‡∏≤‡∏õ‡∏Å‡∏ï‡∏¥'
    ]),
    [''],
    ['‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°', '', total.toFixed(2), '‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ' + items.length + ' ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£']
  ]

  // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô CSV string
  const csvString = csvData.map(row => 
    row.map(cell => {
      const cellStr = String(cell || '')
      return cellStr.includes(',') || cellStr.includes('\\n') || cellStr.includes('"') 
        ? \`"\${cellStr.replace(/"/g, '""')}"\` 
        : cellStr
    }).join(',')
  ).join('\\n')

  // ‡πÄ‡∏û‡∏¥‡πà‡∏° BOM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö UTF-8
  const BOM = '\\uFEFF'
  const csvWithBOM = BOM + csvString

  // ‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
  const blob = new Blob([csvWithBOM], { type: 'text/csv;charset=utf-8' })
  const url = URL.createObjectURL(blob)
  const link = document.createElement('a')
  link.href = url
  link.download = \`calculator-data-\${new Date().getTime()}.csv\`
  document.body.appendChild(link)
  link.click()
  document.body.removeChild(link)
  URL.revokeObjectURL(url)
}

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏ó‡∏¢
const numberToThaiText = (num) => {
  if (num === 0) return '‡∏®‡∏π‡∏ô‡∏¢‡πå‡∏ö‡∏≤‡∏ó‡∏ñ‡πâ‡∏ß‡∏ô'
  
  const baht = Math.floor(num)
  const satang = Math.round((num - baht) * 100)
  
  let result = baht.toLocaleString('th-TH') + '‡∏ö‡∏≤‡∏ó'
  if (satang > 0) {
    result += satang + '‡∏™‡∏ï‡∏≤‡∏á‡∏Ñ‡πå'
  } else {
    result += '‡∏ñ‡πâ‡∏ß‡∏ô'
  }
  return result
}`}</code></pre>
                </div>
              </div>

              {/* Complete Component */}
              <div>
                <h4 className="font-medium text-gray-800 mb-2">üìÑ Complete Calculator Component</h4>
                <div className="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto">
                  <pre className="text-sm"><code>{`'use client'

import { useState } from 'react'

export default function Calculator() {
  const [items, setItems] = useState([
    { id: 1, amount: 1000.00 },
    { id: 2, amount: 500.00 },
    { id: 3, amount: 20.00 },
    { id: 4, amount: 30.02 }
  ])
  const [nextId, setNextId] = useState(5)
  const [newAmount, setNewAmount] = useState('')

  // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°
  const total = items.reduce((sum, item) => sum + item.amount, 0)

  // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà
  const addItem = () => {
    if (newAmount && !isNaN(Number(newAmount)) && parseFloat(newAmount) > 0) {
      setItems([...items, { 
        id: nextId, 
        amount: parseFloat(newAmount) 
      }])
      setNextId(nextId + 1)
      setNewAmount('')
    }
  }

  // ‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
  const deleteItem = (id) => {
    setItems(items.filter(item => item.id !== id))
  }

  // Handle Enter key
  const handleKeyPress = (e) => {
    if (e.key === 'Enter') {
      addItem()
    }
  }

  return (
    <div className="min-h-screen bg-gray-50 py-8">
      <div className="max-w-md mx-auto bg-white rounded-lg shadow-xl overflow-hidden border-2 border-gray-300">
        
        {/* Header */}
        <div className="bg-gradient-to-r from-blue-500 to-blue-600 text-white p-4">
          <div className="flex items-center justify-between">
            <h1 className="text-lg font-semibold">üìä ‡∏£‡∏∞‡∏ö‡∏∏‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</h1>
            <div className="flex items-center space-x-2">
              <span className="bg-blue-400 px-3 py-1 rounded text-sm font-medium">
                {items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
              </span>
              <span className="bg-green-400 px-3 py-1 rounded text-sm font-medium">
                ‚Çø {total.toFixed(2)}
              </span>
            </div>
          </div>
        </div>

        {/* Content */}
        <div className="p-4">
          {/* Table Header */}
          <div className="grid grid-cols-3 gap-4 mb-3 text-sm font-medium text-gray-600 border-b border-gray-200 pb-2">
            <div>‡∏•‡∏≥‡∏î‡∏±‡∏ö</div>
            <div>‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</div>
            <div className="text-center">‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£</div>
          </div>

          {/* Items List */}
          <div className="space-y-2 mb-4 max-h-48 overflow-y-auto">
            {items.map((item, index) => (
              <div key={item.id} className="grid grid-cols-3 gap-4 items-center py-2 border-b border-gray-100 hover:bg-gray-50 transition-colors rounded">
                <div className="text-sm font-medium text-gray-700">{index + 1}</div>
                <div className="text-sm font-bold text-gray-900">
                  {item.amount.toLocaleString('th-TH', { minimumFractionDigits: 2 })}
                </div>
                <div className="text-center">
                  <button
                    onClick={() => deleteItem(item.id)}
                    className="text-red-500 hover:text-red-700 hover:bg-red-50 p-2 rounded-full transition-colors"
                    title="‡∏•‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£"
                  >
                    üóëÔ∏è
                  </button>
                </div>
              </div>
            ))}
            
            {items.length === 0 && (
              <div className="text-center py-8 text-gray-500">
                <p>‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</p>
              </div>
            )}
          </div>

          {/* Add New Item */}
          <div className="flex gap-2 mb-4">
            <input
              type="number"
              step="0.01"
              placeholder="‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÄ‡∏ä‡πà‡∏ô 1234.56)"
              value={newAmount}
              onChange={(e) => setNewAmount(e.target.value)}
              onKeyPress={handleKeyPress}
              className="flex-1 px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-transparent"
            />
            <button
              onClick={addItem}
              disabled={!newAmount || isNaN(Number(newAmount)) || parseFloat(newAmount) <= 0}
              className="bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white px-4 py-2 rounded-md font-medium transition-colors"
            >
              ‚ûï ‡πÄ‡∏û‡∏¥‡πà‡∏°
            </button>
          </div>

          {/* Statistics */}
          <div className="bg-gradient-to-r from-blue-50 to-blue-100 p-4 rounded-lg mb-4 border border-blue-200">
            <div className="grid grid-cols-2 gap-4 text-sm">
              <div>
                <span className="text-gray-600">‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£:</span>
                <div className="font-bold text-blue-600">{items.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</div>
              </div>
              <div>
                <span className="text-gray-600">‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢:</span>
                <div className="font-bold text-blue-600">
                  {items.length > 0 ? (total / items.length).toLocaleString('th-TH', { minimumFractionDigits: 2 }) : '0.00'}
                </div>
              </div>
            </div>
            <div className="mt-3 pt-3 border-t border-blue-200">
              <div className="flex justify-between items-center">
                <span className="font-semibold text-gray-700">‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î</span>
                <span className="text-2xl font-bold text-blue-600">
                  {total.toLocaleString('th-TH', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}
                </span>
              </div>
            </div>
          </div>

          {/* Export Buttons */}
          <div className="grid grid-cols-2 gap-3">
            <button
              onClick={exportToPdf}
              disabled={items.length === 0}
              className="flex items-center justify-center space-x-2 bg-red-500 hover:bg-red-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white py-3 px-4 rounded-md font-medium transition-colors"
            >
              üìÑ Export PDF
            </button>
            <button
              onClick={exportToExcel}
              disabled={items.length === 0}
              className="flex items-center justify-center space-x-2 bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white py-3 px-4 rounded-md font-medium transition-colors"
            >
              üìä Export Excel
            </button>
          </div>
        </div>
      </div>
    </div>
  )
}`}</code></pre>
                </div>
              </div>

              {/* Package.json */}
              <div>
                <h4 className="font-medium text-gray-800 mb-2">üì¶ package.json (Dependencies)</h4>
                <div className="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto">
                  <pre className="text-sm"><code>{`{
  "name": "enhanced-calculator",
  "version": "1.0.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "start": "next start",
    "lint": "next lint"
  },
  "dependencies": {
    "next": "14.0.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0"
  },
  "devDependencies": {
    "@types/node": "^20.0.0",
    "@types/react": "^18.2.0",
    "@types/react-dom": "^18.2.0",
    "autoprefixer": "^10.4.0",
    "eslint": "^8.0.0",
    "eslint-config-next": "14.0.0",
    "postcss": "^8.4.0",
    "tailwindcss": "^3.3.0",
    "typescript": "^5.0.0"
  }
}

// ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ external libraries ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°!
// Export ‡πÉ‡∏ä‡πâ Browser APIs ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß:
// - Blob API ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå
// - URL.createObjectURL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏£‡πâ‡∏≤‡∏á download link
// - CSV format ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Excel compatibility
// - HTML format ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö PDF conversion`}</code></pre>
                </div>
              </div>
            </div>
          </div>
        )}

        {/* How Export Works */}
        <div className="bg-blue-50 border border-blue-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-blue-900 mb-4">üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö Export</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div className="bg-white border border-blue-300 rounded-lg p-4">
              <h4 className="font-semibold text-red-600 mb-3 flex items-center">
                <DocumentArrowDownIcon className="w-5 h-5 mr-2" />
                üìÑ Export PDF Process
              </h4>
              <div className="space-y-2 text-sm text-blue-800">
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-red-500">1.</span>
                  <span>‡∏™‡∏£‡πâ‡∏≤‡∏á HTML Template ‡∏û‡∏£‡πâ‡∏≠‡∏° CSS Styling</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-red-500">2.</span>
                  <span>‡πÉ‡∏™‡πà‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Calculator ‡∏•‡∏á‡πÉ‡∏ô Template</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-red-500">3.</span>
                  <span>‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏ó‡∏¢</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-red-500">4.</span>
                  <span>‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞ Download Link</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-red-500">5.</span>
                  <span>‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ Print ‡πÄ‡∏õ‡πá‡∏ô PDF ‡∏à‡∏≤‡∏Å Browser</span>
                </div>
              </div>
            </div>

            <div className="bg-white border border-blue-300 rounded-lg p-4">
              <h4 className="font-semibold text-green-600 mb-3 flex items-center">
                <TableCellsIcon className="w-5 h-5 mr-2" />
                üìä Export Excel Process
              </h4>
              <div className="space-y-2 text-sm text-blue-800">
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-green-500">1.</span>
                  <span>‡∏™‡∏£‡πâ‡∏≤‡∏á Array ‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏õ‡πá‡∏ô Rows/Columns</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-green-500">2.</span>
                  <span>‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô CSV Format ‡∏û‡∏£‡πâ‡∏≠‡∏° UTF-8 BOM</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-green-500">3.</span>
                  <span>Handle Special Characters (Comma, Quotes)</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-green-500">4.</span>
                  <span>‡∏™‡∏£‡πâ‡∏≤‡∏á Blob ‡πÅ‡∏•‡∏∞ Download Link</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="font-bold text-green-500">5.</span>
                  <span>Excel ‡πÄ‡∏õ‡∏¥‡∏î‡πÑ‡∏ü‡∏•‡πå CSV ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</span>
                </div>
              </div>
            </div>
          </div>

          <div className="mt-4 bg-yellow-50 border border-yellow-300 rounded-lg p-4">
            <h5 className="font-semibold text-yellow-800 mb-2">üí° ‡∏Ç‡πâ‡∏≠‡∏î‡∏µ‡∏Ç‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Browser APIs</h5>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-yellow-700">
              <ul className="space-y-1">
                <li>‚úì ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á Library ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</li>
                <li>‚úì Bundle Size ‡πÄ‡∏•‡πá‡∏Å Performance ‡∏î‡∏µ</li>
                <li>‚úì ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏ô Browser ‡∏ó‡∏∏‡∏Å‡∏ï‡∏±‡∏ß</li>
                <li>‚úì ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ Server</li>
              </ul>
              <ul className="space-y-1">
                <li>‚úì ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö</li>
                <li>‚úì Customizable ‡πÑ‡∏î‡πâ‡∏ï‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£</li>
                <li>‚úì ‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á</li>
                <li>‚úì ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ Offline</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Advanced Features */}
        <div className="bg-purple-50 border border-purple-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-purple-900 mb-4">üöÄ Advanced Features ‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <div className="bg-white border border-purple-300 rounded-lg p-4">
              <h4 className="font-semibold text-purple-700 mb-2">üìä Enhanced Statistics</h4>
              <ul className="text-sm text-purple-600 space-y-1">
                <li>‚Ä¢ ‡πÅ‡∏™‡∏î‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</li>
                <li>‚Ä¢ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡πà‡∏≤‡πÄ‡∏â‡∏•‡∏µ‡πà‡∏¢‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥</li>
                <li>‚Ä¢ ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡πÅ‡∏ö‡∏ö Real-time</li>
                <li>‚Ä¢ Format ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏ö‡∏ö‡πÑ‡∏ó‡∏¢</li>
              </ul>
            </div>

            <div className="bg-white border border-purple-300 rounded-lg p-4">
              <h4 className="font-semibold text-purple-700 mb-2">üé® Improved UI/UX</h4>
              <ul className="text-sm text-purple-600 space-y-1">
                <li>‚Ä¢ Gradient Headers</li>
                <li>‚Ä¢ Hover Effects</li>
                <li>‚Ä¢ Loading States</li>
                <li>‚Ä¢ Disabled States</li>
                <li>‚Ä¢ Responsive Design</li>
              </ul>
            </div>

            <div className="bg-white border border-purple-300 rounded-lg p-4">
              <h4 className="font-semibold text-purple-700 mb-2">‚ö° Better Performance</h4>
              <ul className="text-sm text-purple-600 space-y-1">
                <li>‚Ä¢ Optimized Re-renders</li>
                <li>‚Ä¢ Memory Management</li>
                <li>‚Ä¢ No External Dependencies</li>
                <li>‚Ä¢ Fast File Generation</li>
              </ul>
            </div>
          </div>
        </div>

        {/* Tips */}
        <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
          <h4 className="font-semibold text-yellow-800 mb-2 flex items-center">
            <LightBulbIcon className="w-5 h-5 mr-2" />
            üí° ‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤ Export Features
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-yellow-700 text-sm">
            <div className="space-y-1">
              <div>‚Ä¢ <strong>HTML Export:</strong> ‡πÉ‡∏ä‡πâ Template Literals ‡∏™‡∏£‡πâ‡∏≤‡∏á HTML</div>
              <div>‚Ä¢ <strong>CSS Styling:</strong> Inline CSS ‡πÄ‡∏û‡∏∑‡πà‡∏≠ Compatibility</div>
              <div>‚Ä¢ <strong>Thai Fonts:</strong> ‡πÉ‡∏ä‡πâ Web Safe Fonts</div>
              <div>‚Ä¢ <strong>Blob API:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Browser</div>
              <div>‚Ä¢ <strong>URL.createObjectURL:</strong> ‡∏™‡∏£‡πâ‡∏≤‡∏á Download Link</div>
            </div>
            <div className="space-y-1">
              <div>‚Ä¢ <strong>CSV Encoding:</strong> UTF-8 BOM ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Excel</div>
              <div>‚Ä¢ <strong>Special Characters:</strong> Escape Quotes ‡πÅ‡∏•‡∏∞ Commas</div>
              <div>‚Ä¢ <strong>Thai Localization:</strong> toLocaleString(&apos;th-TH&apos;)</div>
              <div>‚Ä¢ <strong>Error Handling:</strong> ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡πà‡∏≠‡∏ô Export</div>
              <div>‚Ä¢ <strong>User Feedback:&amp;apos;</strong> Alert ‡∏´‡∏£‡∏∑‡∏≠ Toast Messages</div>
            </div>
          </div>
        </div>

        {/* Requirements Checklist */}
        <div className="bg-green-50 border border-green-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-green-900 mb-3">‚úÖ ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ó‡∏µ‡πà‡∏õ‡∏è‡∏¥‡∏ö‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ‡∏Ñ‡∏£‡∏ö</h3>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-medium text-green-800 mb-2">üéØ ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏´‡∏•‡∏±‡∏Å</h4>
              <ul className="space-y-2 text-sm">
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ó‡∏®‡∏ô‡∏¥‡∏¢‡∏°</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>Validation ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>Enter key ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£</span>
                </li>
              </ul>
            </div>
            <div>
              <h4 className="font-medium text-green-800 mb-2">üì§ Export Features</h4>
              <ul className="space-y-2 text-sm">
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>Export PDF (HTML Report)</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>Export Excel (CSV)</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•</span>
                </li>
                <li className="flex items-center space-x-2">
                  <span className="text-green-600">‚úÖ</span>
                  <span>Professional Report Layout</span>
                </li>
              </ul>
            </div>
          </div>
        </div>

        {/* Future Enhancements */}
        <div className="bg-gray-50 border border-gray-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-gray-900 mb-4">üîÆ ‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
            <div>
              <h4 className="font-medium text-gray-800 mb-2">üìà Advanced Export Features</h4>
              <div className="space-y-2 text-sm text-gray-700">
                <div className="flex items-start space-x-2">
                  <span className="text-blue-500">üí°</span>
                  <span><strong>Real PDF:</strong> ‡πÉ‡∏ä‡πâ jsPDF library ‡∏™‡∏£‡πâ‡∏≤‡∏á PDF ‡∏à‡∏£‡∏¥‡∏á</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-blue-500">üí°</span>
                  <span><strong>Excel Advanced:</strong> ‡πÉ‡∏ä‡πâ SheetJS ‡∏™‡∏£‡πâ‡∏≤‡∏á .xlsx ‡∏ó‡∏µ‡πà‡∏°‡∏µ formatting</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-blue-500">üí°</span>
                  <span><strong>Charts:</strong> ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏£‡∏≤‡∏ü‡πÉ‡∏ô Export files</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-blue-500">üí°</span>
                  <span><strong>Email:</strong> ‡∏™‡πà‡∏á Report ‡∏ó‡∏≤‡∏á Email</span>
                </div>
              </div>
            </div>
            
            <div>
              <h4 className="font-medium text-gray-800 mb-2">üöÄ Application Features</h4>
              <div className="space-y-2 text-sm text-gray-700">
                <div className="flex items-start space-x-2">
                  <span className="text-green-500">üîß</span>
                  <span><strong>Data Persistence:</strong> ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô localStorage</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-green-500">üîß</span>
                  <span><strong>Categories:</strong> ‡∏à‡∏±‡∏î‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-green-500">üîß</span>
                  <span><strong>History:</strong> ‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì</span>
                </div>
                <div className="flex items-start space-x-2">
                  <span className="text-green-500">üîß</span>
                  <span><strong>Calculator Mode:</strong> ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏¥‡∏î‡πÄ‡∏•‡∏Ç‡∏õ‡∏Å‡∏ï‡∏¥</span>
                </div>
              </div>
            </div>
          </div>

          <div className="mt-4 bg-blue-50 border border-blue-200 rounded-lg p-4">
            <h5 className="font-semibold text-blue-800 mb-2">üìö Libraries ‡∏ó‡∏µ‡πà‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏ï‡πà‡∏≠</h5>
            <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
              <div>
                <div className="font-medium text-blue-700">PDF Generation:</div>
                <ul className="text-blue-600 space-y-1">
                  <li>‚Ä¢ jsPDF</li>
                  <li>‚Ä¢ Puppeteer</li>
                  <li>‚Ä¢ html2pdf</li>
                </ul>
              </div>
              <div>
                <div className="font-medium text-blue-700">Excel/Spreadsheet:</div>
                <ul className="text-blue-600 space-y-1">
                  <li>‚Ä¢ SheetJS (xlsx)</li>
                  <li>‚Ä¢ ExcelJS</li>
                  <li>‚Ä¢ csv-writer</li>
                </ul>
              </div>
              <div>
                <div className="font-medium text-blue-700">Charts & Visualization:</div>
                <ul className="text-blue-600 space-y-1">
                  <li>‚Ä¢ Chart.js</li>
                  <li>‚Ä¢ Recharts</li>
                  <li>‚Ä¢ D3.js</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        {/* Installation Instructions */}
        <div className="bg-orange-50 border border-orange-200 rounded-lg p-6">
          <h3 className="text-lg font-semibold text-orange-900 mb-4">üõ†Ô∏è ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏•‡∏∞‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h3>
          
          <div className="space-y-4">
            <div>
              <h4 className="font-medium text-orange-800 mb-2">üì¶ ‡∏Å‡∏≤‡∏£‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡∏°‡πà</h4>
              <div className="bg-gray-900 text-green-400 p-3 rounded-lg font-mono text-sm">
                <div># ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ Next.js ‡πÉ‡∏´‡∏°‡πà</div>
                <div>npx create-next-app@latest calculator-app --typescript --tailwind --eslint</div>
                <div className="mt-2"># ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå</div>
                <div>cd calculator-app</div>
                <div className="mt-2"># ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å‡πÇ‡∏Ñ‡πâ‡∏î‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≤‡∏á‡∏ö‡∏ô‡πÑ‡∏õ‡πÉ‡∏™‡πà‡πÉ‡∏ô src/app/page.tsx</div>
                <div className="mt-2"># ‡∏£‡∏±‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå</div>
                <div>npm run dev</div>
              </div>
            </div>

            <div>
              <h4 className="font-medium text-orange-800 mb-2">üîß ‡∏Å‡∏≤‡∏£‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°</h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-orange-700">
                <ul className="space-y-1">
                  <li>‚Ä¢ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏™‡∏µ‡∏ò‡∏µ‡∏°‡πÉ‡∏ô Tailwind config</li>
                  <li>‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° favicon ‡πÅ‡∏•‡∏∞ meta tags</li>
                  <li>‚Ä¢ ‡∏õ‡∏£‡∏±‡∏ö‡πÅ‡∏ï‡πà‡∏á font ‡πÉ‡∏´‡πâ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°</li>
                  <li>‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° error boundaries</li>
                </ul>
                <ul className="space-y-1">
                  <li>‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° unit tests ‡∏î‡πâ‡∏ß‡∏¢ Jest</li>
                  <li>‚Ä¢ Setup ESLint ‡πÅ‡∏•‡∏∞ Prettier</li>
                  <li>‚Ä¢ ‡πÄ‡∏û‡∏¥‡πà‡∏° environment variables</li>
                  <li>‚Ä¢ Deploy ‡πÑ‡∏õ‡∏¢‡∏±‡∏á Vercel ‡∏´‡∏£‡∏∑‡∏≠ Netlify</li>
                </ul>
              </div>
            </div>
          </div>
        </div>

        {/* Summary */}
        <div className="bg-gradient-to-r from-green-50 to-blue-50 border border-green-200 rounded-lg p-6">
          <h3 className="text-xl font-bold text-gray-900 mb-4">üìù ‡∏™‡∏£‡∏∏‡∏õ‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£ Calculator Application</h3>
          
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="bg-white p-4 rounded-lg border border-green-300 shadow-sm">
              <h4 className="font-semibold text-green-600 mb-2 flex items-center">
                <CalculatorIcon className="w-5 h-5 mr-2" />
                üéØ ‡∏ú‡∏•‡∏á‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
              </h4>
              <p className="text-sm text-gray-700">
                ‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö ‡∏û‡∏£‡πâ‡∏≠‡∏° Export PDF ‡πÅ‡∏•‡∏∞ Excel 
                ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á ‡∏ï‡∏≠‡∏ö‡πÇ‡∏à‡∏ó‡∏¢‡πå‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô 100%
              </p>
            </div>
            
            <div className="bg-white p-4 rounded-lg border border-blue-300 shadow-sm">
              <h4 className="font-semibold text-blue-600 mb-2 flex items-center">
                <CodeBracketIcon className="w-5 h-5 mr-2" />
                üõ†Ô∏è ‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ
              </h4>
              <p className="text-sm text-gray-700">
                Next.js 14, React 18, TypeScript, Tailwind CSS 
                ‡∏û‡∏£‡πâ‡∏≠‡∏° Browser APIs ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Export ‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ external libraries
              </p>
            </div>
            
            <div className="bg-white p-4 rounded-lg border border-purple-300 shadow-sm">
              <h4 className="font-semibold text-purple-600 mb-2 flex items-center">
                <LightBulbIcon className="w-5 h-5 mr-2" />
                üöÄ ‡∏ô‡∏ß‡∏±‡∏ï‡∏Å‡∏£‡∏£‡∏°
              </h4>
              <p className="text-sm text-gray-700">
                ‡πÉ‡∏ä‡πâ Browser APIs ‡∏™‡∏£‡πâ‡∏≤‡∏á Export features ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á 
                ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ UX ‡∏ó‡∏µ‡πà‡∏î‡∏µ‡πÄ‡∏¢‡∏µ‡πà‡∏¢‡∏°
              </p>
            </div>
          </div>

          <div className="mt-6 bg-yellow-50 border border-yellow-300 rounded-lg p-4">
            <h4 className="font-semibold text-yellow-800 mb-2">üéâ ‡∏à‡∏∏‡∏î‡πÄ‡∏î‡πà‡∏ô‡∏Ç‡∏≠‡∏á‡πÇ‡∏Ñ‡∏£‡∏á‡∏Å‡∏≤‡∏£</h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-yellow-700">
              <ul className="space-y-1">
                <li>‚ú® <strong>‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏à‡∏£‡∏¥‡∏á:</strong> Export PDF/Excel ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ 100%</li>
                <li>üé® <strong>UI/UX ‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°:</strong> Modern design ‡∏û‡∏£‡πâ‡∏≠‡∏° animations</li>
                <li>üåê <strong>‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢:</strong> ‡πÅ‡∏õ‡∏•‡∏á‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡∏±‡∏á‡∏™‡∏∑‡∏≠‡πÑ‡∏ó‡∏¢</li>
                <li>‚ö° <strong>Performance ‡∏î‡∏µ:</strong> ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ heavy libraries</li>
              </ul>
              <ul className="space-y-1">
                <li>üîí <strong>‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢:</strong> ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏°‡πà‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ</li>
                <li>üì± <strong>Responsive:</strong> ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ó‡∏∏‡∏Å‡∏Ç‡∏ô‡∏≤‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠</li>
                <li>üß© <strong>Modular Code:</strong> ‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô‡πÅ‡∏¢‡∏Å functions ‡∏ä‡∏±‡∏î‡πÄ‡∏à‡∏ô</li>
                <li>üîÑ <strong>Scalable:</strong> ‡∏Ç‡∏¢‡∏≤‡∏¢‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï</li>
              </ul>
            </div>
          </div>
        </div>
      </div>
    </QuestionLayout>
  )
}